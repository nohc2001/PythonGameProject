충돌처리
1. 충돌만 감지하는 것
2. 충돌이 되지 않게 방지하는 것.

bool bPointInRectRange(int x, int y, rt4 rt) {
	if ((rt.fx <= x && x <= rt.lx) &&
		(rt.fy <= y && y <= rt.ly)) {
		return true;
	}
	else return false;
}

bool bRectinRect(shp::rect4f rt1, shp::rect4f rt2) {
	if (((rt1.fx <= rt2.fx && rt2.fx <= rt1.lx) || (rt1.fx <= rt2.lx && rt2.lx <= rt1.lx))
		&& ((rt1.fy <= rt2.fy && rt2.fy <= rt1.ly) || (rt1.fy <= rt2.ly && rt2.ly <= rt1.ly))) {
		return true;
	}
	
	return false;
}

bool bRectInRectRange(rt4 rt1, rt4 rt2) {
	if (bPointInRectRange(rt2.fx, rt2.fy, rt1)) {
		return true;
	}

	if (bPointInRectRange(rt2.fx, rt2.ly, rt1)) {
		return true;
	}

	if (bPointInRectRange(rt2.lx, rt2.fy, rt1)) {
		return true;
	}

	if (bPointInRectRange(rt2.lx, rt2.ly, rt1)) {
		return true;
	}

	if (
		(((rt1.fx < rt2.fx && rt2.fx < rt1.lx) && (rt1.fx < rt2.lx && rt2.lx < rt1.lx)) 
			&& ((rt2.fy < rt1.fy && rt1.fy < rt2.ly) && (rt2.fy < rt1.ly && rt1.ly < rt2.ly))) ||
		(((rt2.fx < rt1.fx && rt1.fx < rt2.lx) && (rt2.fx < rt1.lx && rt1.lx < rt2.lx))
			&& ((rt1.fy < rt2.fy && rt2.fy < rt1.ly) && (rt1.fy < rt2.ly && rt2.ly < rt1.ly)))) {
		return true;
	}

	return false;
}


0주차 : 오브젝트 제어, 이미지 리소스, 오브젝트 렌더 레이어 (100%)
1주차 : 충돌체 처리 구현, 택스트 출력, 사운드, 페럴렉스, 파티클, UI (20%)
2주차 : 적 1종 + 플레이어 전투 데모 + 플레이어 HP (0%)
3주차 : 스테이지 에디터 비스무리하게 만들기, 스테이지 하나 만들기 (0%)

할거
충돌체 처리 구현 (V)
텍스트 출력 (V)
페럴렉스
UI
AI 표준
적 1종
플레이어 만들기
전투데모
스테이지 에디터 비스무리하게 만들기
스테이지 하나 만들기
